//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DönemBitirme.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBLibraryEntities : DbContext
    {
        public DBLibraryEntities()
            : base("name=DBLibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AboutU> AboutUs { get; set; }
        public virtual DbSet<AboutUsLog> AboutUsLogs { get; set; }
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<AuthorLog> AuthorLogs { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<BooksLog> BooksLogs { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CategoryLog> CategoryLogs { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeeLog> EmployeeLogs { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<MemberLog> MemberLogs { get; set; }
        public virtual DbSet<Motion> Motions { get; set; }
        public virtual DbSet<MotionLog> MotionLogs { get; set; }
        public virtual DbSet<Publisher> Publishers { get; set; }
        public virtual DbSet<PublisherLog> PublisherLogs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int CreateAboutUs(string explanation)
        {
            var explanationParameter = explanation != null ?
                new ObjectParameter("Explanation", explanation) :
                new ObjectParameter("Explanation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAboutUs", explanationParameter);
        }
    
        public virtual int CreateAuthor(string authorName)
        {
            var authorNameParameter = authorName != null ?
                new ObjectParameter("AuthorName", authorName) :
                new ObjectParameter("AuthorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAuthor", authorNameParameter);
        }
    
        public virtual int CreateBooks(string bookName, Nullable<int> category, Nullable<int> author, string bookYear, Nullable<int> publisher)
        {
            var bookNameParameter = bookName != null ?
                new ObjectParameter("BookName", bookName) :
                new ObjectParameter("BookName", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var authorParameter = author.HasValue ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(int));
    
            var bookYearParameter = bookYear != null ?
                new ObjectParameter("BookYear", bookYear) :
                new ObjectParameter("BookYear", typeof(string));
    
            var publisherParameter = publisher.HasValue ?
                new ObjectParameter("Publisher", publisher) :
                new ObjectParameter("Publisher", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBooks", bookNameParameter, categoryParameter, authorParameter, bookYearParameter, publisherParameter);
        }
    
        public virtual int CreateCategory(string categoryName)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCategory", categoryNameParameter);
        }
    
        public virtual int CreateEmployee(string employeeName)
        {
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateEmployee", employeeNameParameter);
        }
    
        public virtual int CreateMember(string memberName, string memberMail, string memberPassword)
        {
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberMailParameter = memberMail != null ?
                new ObjectParameter("MemberMail", memberMail) :
                new ObjectParameter("MemberMail", typeof(string));
    
            var memberPasswordParameter = memberPassword != null ?
                new ObjectParameter("MemberPassword", memberPassword) :
                new ObjectParameter("MemberPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateMember", memberNameParameter, memberMailParameter, memberPasswordParameter);
        }
    
        public virtual int CreateMotion(Nullable<int> bookId, Nullable<int> member, string purchaseDate, string returnDate, string registerDate, Nullable<int> employee)
        {
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            var memberParameter = member.HasValue ?
                new ObjectParameter("Member", member) :
                new ObjectParameter("Member", typeof(int));
    
            var purchaseDateParameter = purchaseDate != null ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(string));
    
            var returnDateParameter = returnDate != null ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(string));
    
            var registerDateParameter = registerDate != null ?
                new ObjectParameter("RegisterDate", registerDate) :
                new ObjectParameter("RegisterDate", typeof(string));
    
            var employeeParameter = employee.HasValue ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateMotion", bookIdParameter, memberParameter, purchaseDateParameter, returnDateParameter, registerDateParameter, employeeParameter);
        }
    
        public virtual int CreateMotionProc(Nullable<int> bookId, Nullable<int> member, string purchaseDate, string returnDate, string registerDate, Nullable<int> employee)
        {
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            var memberParameter = member.HasValue ?
                new ObjectParameter("Member", member) :
                new ObjectParameter("Member", typeof(int));
    
            var purchaseDateParameter = purchaseDate != null ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(string));
    
            var returnDateParameter = returnDate != null ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(string));
    
            var registerDateParameter = registerDate != null ?
                new ObjectParameter("RegisterDate", registerDate) :
                new ObjectParameter("RegisterDate", typeof(string));
    
            var employeeParameter = employee.HasValue ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateMotionProc", bookIdParameter, memberParameter, purchaseDateParameter, returnDateParameter, registerDateParameter, employeeParameter);
        }
    
        public virtual int CreatePublisher(string publisherName)
        {
            var publisherNameParameter = publisherName != null ?
                new ObjectParameter("PublisherName", publisherName) :
                new ObjectParameter("PublisherName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePublisher", publisherNameParameter);
        }
    
        public virtual int DeleteAboutUs(Nullable<int> aboutId)
        {
            var aboutIdParameter = aboutId.HasValue ?
                new ObjectParameter("AboutId", aboutId) :
                new ObjectParameter("AboutId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAboutUs", aboutIdParameter);
        }
    
        public virtual int DeleteAuthor(Nullable<int> authorId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAuthor", authorIdParameter);
        }
    
        public virtual int DeleteBooks(Nullable<int> booksId)
        {
            var booksIdParameter = booksId.HasValue ?
                new ObjectParameter("BooksId", booksId) :
                new ObjectParameter("BooksId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBooks", booksIdParameter);
        }
    
        public virtual int DeleteBooksProc(Nullable<int> booksId)
        {
            var booksIdParameter = booksId.HasValue ?
                new ObjectParameter("BooksId", booksId) :
                new ObjectParameter("BooksId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBooksProc", booksIdParameter);
        }
    
        public virtual int DeleteCategory(Nullable<int> catId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategory", catIdParameter);
        }
    
        public virtual int DeleteCategoryProc(Nullable<int> catId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategoryProc", catIdParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", employeeIdParameter);
        }
    
        public virtual int DeleteMember(Nullable<int> memberId)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMember", memberIdParameter);
        }
    
        public virtual int DeleteMotion(Nullable<int> motionId)
        {
            var motionIdParameter = motionId.HasValue ?
                new ObjectParameter("MotionId", motionId) :
                new ObjectParameter("MotionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMotion", motionIdParameter);
        }
    
        public virtual int DeletePublisher(Nullable<int> publisherId)
        {
            var publisherIdParameter = publisherId.HasValue ?
                new ObjectParameter("PublisherId", publisherId) :
                new ObjectParameter("PublisherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePublisher", publisherIdParameter);
        }
    
        public virtual ObjectResult<GetAboutUs_Result> GetAboutUs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAboutUs_Result>("GetAboutUs");
        }
    
        public virtual ObjectResult<GetAuthor_Result> GetAuthor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuthor_Result>("GetAuthor");
        }
    
        public virtual ObjectResult<GETBOOKS_Result> GETBOOKS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETBOOKS_Result>("GETBOOKS");
        }
    
        public virtual ObjectResult<GetCategory_Result> GetCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategory_Result>("GetCategory");
        }
    
        public virtual ObjectResult<GetEmployee_Result> GetEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployee_Result>("GetEmployee");
        }
    
        public virtual ObjectResult<GetMember_Result> GetMember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMember_Result>("GetMember");
        }
    
        public virtual ObjectResult<GetMotion_Result> GetMotion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMotion_Result>("GetMotion");
        }
    
        public virtual ObjectResult<GetPublisher_Result> GetPublisher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPublisher_Result>("GetPublisher");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateAboutUs(Nullable<int> aboutUsId, string explanation)
        {
            var aboutUsIdParameter = aboutUsId.HasValue ?
                new ObjectParameter("AboutUsId", aboutUsId) :
                new ObjectParameter("AboutUsId", typeof(int));
    
            var explanationParameter = explanation != null ?
                new ObjectParameter("Explanation", explanation) :
                new ObjectParameter("Explanation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAboutUs", aboutUsIdParameter, explanationParameter);
        }
    
        public virtual int UpdateAuthor(Nullable<int> authorId, string authorName)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var authorNameParameter = authorName != null ?
                new ObjectParameter("AuthorName", authorName) :
                new ObjectParameter("AuthorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAuthor", authorIdParameter, authorNameParameter);
        }
    
        public virtual int UpdateBook(Nullable<int> bookId, string bookName, Nullable<int> category, Nullable<int> author, string bookYear, Nullable<int> publisher)
        {
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            var bookNameParameter = bookName != null ?
                new ObjectParameter("BookName", bookName) :
                new ObjectParameter("BookName", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var authorParameter = author.HasValue ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(int));
    
            var bookYearParameter = bookYear != null ?
                new ObjectParameter("BookYear", bookYear) :
                new ObjectParameter("BookYear", typeof(string));
    
            var publisherParameter = publisher.HasValue ?
                new ObjectParameter("Publisher", publisher) :
                new ObjectParameter("Publisher", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBook", bookIdParameter, bookNameParameter, categoryParameter, authorParameter, bookYearParameter, publisherParameter);
        }
    
        public virtual int UpdateCategory(Nullable<int> categoryId, string categoryName)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCategory", categoryIdParameter, categoryNameParameter);
        }
    
        public virtual int UpdateEmployee(Nullable<int> employeeId, string employeeName)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", employeeIdParameter, employeeNameParameter);
        }
    
        public virtual int UpdateMember(Nullable<int> memberId, string memberName, string memberMail, string memberPassword)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberMailParameter = memberMail != null ?
                new ObjectParameter("MemberMail", memberMail) :
                new ObjectParameter("MemberMail", typeof(string));
    
            var memberPasswordParameter = memberPassword != null ?
                new ObjectParameter("MemberPassword", memberPassword) :
                new ObjectParameter("MemberPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMember", memberIdParameter, memberNameParameter, memberMailParameter, memberPasswordParameter);
        }
    
        public virtual int UpdateMotion(Nullable<int> motionId, Nullable<int> book, Nullable<int> member, string purchaseDate, string returnDate, string registerDate, Nullable<int> employee)
        {
            var motionIdParameter = motionId.HasValue ?
                new ObjectParameter("MotionId", motionId) :
                new ObjectParameter("MotionId", typeof(int));
    
            var bookParameter = book.HasValue ?
                new ObjectParameter("Book", book) :
                new ObjectParameter("Book", typeof(int));
    
            var memberParameter = member.HasValue ?
                new ObjectParameter("Member", member) :
                new ObjectParameter("Member", typeof(int));
    
            var purchaseDateParameter = purchaseDate != null ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(string));
    
            var returnDateParameter = returnDate != null ?
                new ObjectParameter("ReturnDate", returnDate) :
                new ObjectParameter("ReturnDate", typeof(string));
    
            var registerDateParameter = registerDate != null ?
                new ObjectParameter("RegisterDate", registerDate) :
                new ObjectParameter("RegisterDate", typeof(string));
    
            var employeeParameter = employee.HasValue ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMotion", motionIdParameter, bookParameter, memberParameter, purchaseDateParameter, returnDateParameter, registerDateParameter, employeeParameter);
        }
    
        public virtual int UpdatePublisher(Nullable<int> publisherId, string publisherName)
        {
            var publisherIdParameter = publisherId.HasValue ?
                new ObjectParameter("PublisherId", publisherId) :
                new ObjectParameter("PublisherId", typeof(int));
    
            var publisherNameParameter = publisherName != null ?
                new ObjectParameter("PublisherName", publisherName) :
                new ObjectParameter("PublisherName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePublisher", publisherIdParameter, publisherNameParameter);
        }
    
        public virtual int UserChecking(string memberMail, string memberPassword, ObjectParameter responseMessage)
        {
            var memberMailParameter = memberMail != null ?
                new ObjectParameter("MemberMail", memberMail) :
                new ObjectParameter("MemberMail", typeof(string));
    
            var memberPasswordParameter = memberPassword != null ?
                new ObjectParameter("MemberPassword", memberPassword) :
                new ObjectParameter("MemberPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserChecking", memberMailParameter, memberPasswordParameter, responseMessage);
        }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string memberMail, string memberPassword)
        {
            var memberMailParameter = memberMail != null ?
                new ObjectParameter("MemberMail", memberMail) :
                new ObjectParameter("MemberMail", typeof(string));
    
            var memberPasswordParameter = memberPassword != null ?
                new ObjectParameter("MemberPassword", memberPassword) :
                new ObjectParameter("MemberPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", memberMailParameter, memberPasswordParameter);
        }
    }
}
